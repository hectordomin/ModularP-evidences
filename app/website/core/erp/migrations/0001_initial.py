# Generated by Django 4.2.3 on 2023-10-29 23:26

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(db_column='user_id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id usuario')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='correo electronico')),
                ('career', models.CharField(db_column='career', max_length=30, verbose_name='carrera')),
                ('json_tasks', models.JSONField(db_column='json_tasks', null=True, verbose_name='pendientes')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuario',
                'verbose_name_plural': 'usuarios',
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=100, verbose_name='profesor')),
            ],
            options={
                'verbose_name': 'profesor',
                'verbose_name_plural': 'profesores',
                'db_table': 'professor',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=150, verbose_name='materia')),
            ],
            options={
                'verbose_name': 'materia',
                'verbose_name_plural': 'materias',
                'db_table': 'subject',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('schedule_id', models.BigAutoField(db_column='schedule_id', primary_key=True, serialize=False, verbose_name='id horario')),
                ('json_schedule', models.JSONField(db_column='json_schedule', null=True, verbose_name='horario_JSON')),
                ('student_id', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='id estudiante')),
            ],
            options={
                'verbose_name': 'horario',
                'verbose_name_plural': 'horarios',
                'db_table': 'schedule',
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('evaluation_id', models.BigAutoField(db_column='evaluation', primary_key=True, serialize=False, verbose_name='evaluacion')),
                ('comment', models.TextField(db_column='comment', null=True, verbose_name='comentario')),
                ('complexity', models.IntegerField(choices=[(6, 'Muy desafiante'), (7, 'Exigente'), (8, 'Moderadamente demandante'), (9, 'Manejable'), (10, 'Muy accesible')], default=8, null=True)),
                ('difficult', models.IntegerField(choices=[(6, 'Altamente desafiante'), (7, 'Exigente'), (8, 'Moderado'), (9, 'Manejable'), (10, 'Muy asequible')], default=8, null=True)),
                ('punctuality', models.IntegerField(choices=[(6, 'Insatisfactorio'), (7, 'Regular'), (8, 'Aceptable'), (9, 'Muy bien'), (10, 'Excelente')], default=8, null=True)),
                ('learning', models.IntegerField(choices=[(6, 'Poco enriquecedor'), (7, 'Mejorable'), (8, 'Aceptable'), (9, 'Positiva'), (10, 'Muy enriquecedor')], default=8, null=True)),
                ('professor', models.ForeignKey(db_column='professor', null=True, on_delete=django.db.models.deletion.CASCADE, to='erp.professor', verbose_name='profesor')),
                ('subject', models.ForeignKey(db_column='subject', on_delete=django.db.models.deletion.CASCADE, to='erp.subject', verbose_name='materia')),
                ('user', models.ForeignKey(db_column='user', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='usuario')),
            ],
            options={
                'verbose_name': 'evaluacion',
                'verbose_name_plural': 'evaluaciones',
                'db_table': 'Evaluation',
            },
        ),
    ]
